name: Build & Release Agent

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

defaults:
  run:
    shell: bash

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  NODE_ENV: production

jobs:
  build:
    name: Build & Publish
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - run: git log --all
    - run: git describe --long
    - name: Setup Node 17
      uses: actions/setup-node@v3
      with:
        node-version: 17
    - run: yarn
    - run: yarn version
    - name: Check & Set VERSION
      id: version
      run: |
        echo "::set-output name=VERSION::$(<VERSION)"
        echo "::set-output name=container_tag::$IMAGE_NAME:$(<VERSION)"

        grep -v dirty VERSION || { git status ; exit 1 ; }

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set latest Container tag
      id: latesttag
      run: |
        echo "::set-output name=container_tag::$IMAGE_NAME:latest"

    - name: Docker build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        load: true
        tags: bbb
    - name: Test
      run: |
        docker images
        docker run --rm bbb | tee /dev/stderr | grep --color -i lankwitz

    - name: Docker build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        # Container push only for push, not on PR
        push: ${{ github.event_name == 'push' }} 
        platforms: linux/amd64,linux/arm64
        tags: ${{ join(steps.*.outputs.container_tag, ',') }}

